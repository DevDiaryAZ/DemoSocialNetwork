{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","ProfileInfo","profile","className","classes","descriptionBlock","src","photos","large","Preloader","Post","item","message","likesCount","AddPostForm","onSubmit","render","handleSubmit","form","submitting","pristine","values","name","validate","composeValidators","required","maxLengthCreator","input","meta","placeholder","MyPosts","memo","postsElements","posts","reverse","map","p","id","postsBlocks","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.1de442b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1Akoi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlocks\":\"MyPosts_postsBlocks__3q3Hi\",\"posts\":\"MyPosts_posts__26Ngb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__2Iy6Q\",\"item\":\"Post_item__1WXIe\"};","import React from 'react';\r\nimport classes from './ProfileInfo.module.css'\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || '------'}</span>\r\n                </div>}\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode}\r\n                           value={this.state.status}/>\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=> {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return <div>\r\n        {!editMode &&\r\n        <div>\r\n            <span onDoubleClick={activateEditMode}>{props.status || '------'}</span>\r\n        </div>}\r\n        {editMode &&\r\n        <div>\r\n            <input autoFocus={true} onChange={onStatusChange} onBlur={deactivateEditMode} value={status}/>\r\n        </div>}\r\n    </div>\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            {/*<img className='forest' src='https://www.scienceintheclassroom.org/sites/default/files/styles/open_graph/public/magazine-images/06_Seeing-the-forest-for-the-trees.jpg?itok=ArG80Ken'/>*/}\r\n        </div>\r\n        <div className={classes.descriptionBlock}>\r\n            <img src={props.profile.photos.large} />\r\n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css'\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n    return <div className={classes.item}>\r\n        <img src='https://i.pinimg.com/originals/1d/cd/6e/1dcd6eefef0414c46c805b48be60b08f.jpg'></img>\r\n        {props.message}\r\n        <div>\r\n            <span>likes {props.likesCount}</span>\r\n\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Post;","import {Field, Form} from \"react-final-form\";\r\nimport {composeValidators, maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport React from \"react\";\r\n\r\n\r\nconst AddPostForm = (props) => (\r\n    <Form\r\n        onSubmit={props.onSubmit}\r\n        render={({handleSubmit, form, submitting, pristine, values}) => (\r\n            <form onSubmit={handleSubmit}>\r\n                <Field\r\n                    name=\"newPostText\"\r\n                    validate={composeValidators(required, maxLengthCreator(10))}>\r\n                    {({input, meta}) => (\r\n                        <Textarea input={input} meta={meta} placeholder=\"Post message\"/>\r\n                    )}\r\n                </Field>\r\n                <div>\r\n                    <button>Add post</button>\r\n                </div>\r\n            </form>\r\n        )}\r\n    />\r\n)\r\n\r\nexport default AddPostForm;","import React from 'react';\r\nimport classes from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport AddPostForm from \"./AddPostForm/AddPostForm\";\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n        let postsElements = [...props.posts]\r\n        .reverse()\r\n        .map(p => <Post message={p.message} id={p.id} likesCount={p.likesCount}/>)\r\n\r\n        let onAddPost = (e) => {\r\n            props.addPost(e.newPostText);\r\n        }\r\n\r\n        return (\r\n            <div className={classes.postsBlocks}>\r\n                <h3>my posts</h3>\r\n                <AddPostForm onSubmit={onAddPost}/>\r\n                <div className={classes.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>)\r\n    }\r\n);\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {dispatch(addPostActionCreator(newPostText))}\r\n    }\r\n\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport classes from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return <div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer />\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getStatus, getUserProfile, updateStatus} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer)"],"sourceRoot":""}