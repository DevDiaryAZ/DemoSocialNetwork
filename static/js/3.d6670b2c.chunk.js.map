{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileDataForm.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/AddPostForm/AddPostForm.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","ProfileDataForm","onSubmit","initialValues","render","handleSubmit","className","classes","body","name","input","meta","type","for","component","id","Object","keys","profile","contacts","map","key","onClick","ProfileData","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","isOwner","goToEditMode","Contact","contact","ProfileInfo","Preloader","formData","a","saveProfile","descriptionBlock","src","photos","large","userPhoto","file_upload","target","files","length","savePhoto","Post","item","myAvatarPhoto","message","likesCount","AddPostForm","form","submitting","pristine","values","validate","composeValidators","required","maxLengthCreator","placeholder","button","MyPosts","React","memo","postsElements","posts","reverse","p","postsBlocks","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.d6670b2c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3XzaS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1QekZ\",\"file_upload\":\"ProfileInfo_file_upload__1bZX9\",\"contact\":\"ProfileInfo_contact__3gbg_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"ProfileDataForm_body__1RZMo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlocks\":\"MyPosts_postsBlocks__lFSDv\",\"posts\":\"MyPosts_posts___tKaD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__3L5i6\",\"item\":\"Post_item__3aA8I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"AddPostForm_button__dhBV7\"};","import React, {useEffect, useState} from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=> {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return <div>\r\n        {!editMode &&\r\n        <div>\r\n            <b>Status: </b><span onDoubleClick={activateEditMode}>{props.status || '------'}</span>\r\n        </div>}\r\n        {editMode &&\r\n        <div>\r\n            <input autoFocus={true} onChange={onStatusChange} onBlur={deactivateEditMode} value={status}/>\r\n        </div>}\r\n    </div>\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {Field, Form} from \"react-final-form\";\r\nimport {Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport classes from \"./ProfileDataForm.module.css\"\r\n\r\nconst ProfileDataForm = (props) => {\r\n    return <Form\r\n        onSubmit={props.onSubmit}\r\n        initialValues={props.initialValues}\r\n        render={({handleSubmit}) => (\r\n            <form onSubmit={handleSubmit}>\r\n                <div className={classes.body}>\r\n                    <div>\r\n                        <label>Full name: </label>\r\n                        <Field name=\"fullName\">\r\n                            {({input, meta}) => (<Input input={input} meta={meta} type=\"text\"/>\r\n                            )}\r\n                        </Field>\r\n                    </div>\r\n                    <div>\r\n                        <label for=\"checkid\">Looking for a job:\r\n                            <Field name=\"lookingForAJob\"\r\n                                   component=\"input\"\r\n                                   type=\"checkbox\"\r\n                                   id=\"checkid\"/>\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label>My professional skills: </label>\r\n                        <Field name=\"lookingForAJobDescription\">\r\n                            {({input, meta}) => (\r\n                                <Textarea input={input} meta={meta} type=\"text\"/>\r\n                            )}\r\n                        </Field>\r\n                    </div>\r\n                    <div>\r\n                        <label>About me: </label>\r\n                        <Field name=\"aboutMe\">\r\n                            {({input, meta}) => (\r\n                                <Textarea input={input} meta={meta} type=\"text\"/>\r\n                            )}\r\n                        </Field>\r\n                    </div>\r\n                    <div>\r\n                        <label>Contacts: </label> {Object.keys(props.profile.contacts).map(key => {\r\n                        return <div>\r\n                            <label>{key}: <Field name={\"contacts.\" + key}>\r\n                                {({input, meta}) => (<Input input={input} meta={meta} type=\"text\"/>\r\n                                )}\r\n                            </Field></label>\r\n                        </div>\r\n                    })}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <button onClick={() => {\r\n                    }}>save\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        )}\r\n    />\r\n}\r\n\r\n\r\n/*const ProfileData = (props) => {\r\n    return <div>\r\n        {props.isOwner && <div><button onClick={props.goToEditMode}>edit</button></div>}\r\n\r\n        <div>\r\n            <b>Full name</b>: {props.profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {props.profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {props.profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills</b>: {props.profile.lookingForAJobDescription}\r\n        </div>}\r\n        <div>\r\n            {props.profile.aboutMe &&\r\n            <div>\r\n                <b>About me</b>: {props.profile.aboutMe}\r\n            </div>\r\n            }\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(props.profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}*/\r\n\r\n\r\nexport default ProfileDataForm","import React, {useState} from 'react';\r\nimport classes from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"./../../../assets/images/user.png\"\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (formData) => {\r\n        props.saveProfile(formData);\r\n        setEditMode(false)\r\n    }\r\n\r\n    return <div>\r\n        <div className={classes.descriptionBlock}>\r\n            <img src={props.profile.photos.large || userPhoto}/>\r\n            {props.isOwner && <div className={classes.file_upload}>\r\n                <label for=\"input__file\">\r\n                    <input id=\"input__file\" type=\"file\" name=\"file\" onChange={onMainPhotoSelected}/>\r\n                    Обновить фотографию</label>\r\n            </div>}\r\n            <h3>ABOUT ME</h3>\r\n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n\r\n            {editMode ? <ProfileDataForm initialValues={props.profile} onSubmit={onSubmit} profile={props.profile}/> :\r\n                <ProfileData profile={props.profile} isOwner={props.isOwner} goToEditMode={() => {\r\n                    setEditMode(true)\r\n                }}/>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n    return <div>\r\n                <div>\r\n            <b>Full name</b>: {props.profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {props.profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {props.profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills</b>: {props.profile.lookingForAJobDescription}\r\n        </div>}\r\n        <div>\r\n            {props.profile.aboutMe &&\r\n            <div>\r\n                <b>About me</b>: {props.profile.aboutMe}\r\n            </div>\r\n            }\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(props.profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n        {props.isOwner && <div>\r\n            <button onClick={props.goToEditMode}>edit</button>\r\n        </div>}\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={classes.contact}>\r\n        <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n}\r\n\r\n\r\nexport default ProfileInfo;\r\n\r\n\r\n","import React from 'react';\r\nimport classes from './Post.module.css'\r\nimport myAvatarPhoto from './../../../../assets/images/user.png'\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n    return <div className={classes.item}>\r\n        <img src={myAvatarPhoto}></img>\r\n        {props.message}\r\n        <div>\r\n            <span>likes {props.likesCount}</span>\r\n\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Post;","import {Field, Form} from \"react-final-form\";\r\nimport {composeValidators, maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport React from \"react\";\r\nimport classes from './AddPostForm.module.css'\r\n\r\n\r\nconst AddPostForm = (props) => (\r\n    <Form\r\n        onSubmit={props.onSubmit}\r\n        render={({handleSubmit, form, submitting, pristine, values}) => (\r\n            <form onSubmit={handleSubmit}>\r\n                <Field\r\n                    name=\"newPostText\"\r\n                    validate={composeValidators(required, maxLengthCreator(10))}>\r\n                    {({input, meta}) => (\r\n                        <Textarea className={classes.input} input={input} meta={meta} placeholder=\"Post message...\"/>\r\n                    )}\r\n                </Field>\r\n                <div>\r\n                    <button className={classes.button}>Add post</button>\r\n                </div>\r\n            </form>\r\n        )}\r\n    />\r\n)\r\n\r\nexport default AddPostForm;","import React from 'react';\r\nimport classes from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport AddPostForm from \"./AddPostForm/AddPostForm\";\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n        let postsElements = [...props.posts]\r\n        .reverse()\r\n        .map(p => <Post message={p.message} id={p.id} likesCount={p.likesCount}/>)\r\n\r\n        let onAddPost = (e) => {\r\n            props.addPost(e.newPostText);\r\n        }\r\n\r\n        return (\r\n            <div className={classes.postsBlocks}>\r\n                <h3>MY POSTS</h3>\r\n                <AddPostForm onSubmit={onAddPost}/>\r\n                <div className={classes.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>)\r\n    }\r\n);\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {dispatch(addPostActionCreator(newPostText))}\r\n    }\r\n\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport classes from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return <div className={classes.profile}>\r\n        <ProfileInfo savePhoto={props.savePhoto}\r\n                     profile={props.profile}\r\n                     status={props.status}\r\n                     updateStatus={props.updateStatus}\r\n                     isOwner={props.isOwner}\r\n                     saveProfile={props.saveProfile}/>\r\n        <MyPostsContainer />\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId);\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId!=prevProps.match.params.userId)\r\n        this.refreshProfile()\r\n        }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                isOwner = {!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n            savePhoto = {this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus,savePhoto,saveProfile}),\r\n    withRouter\r\n)(ProfileContainer)"],"sourceRoot":""}